apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.appCompileSdkVerion
    buildToolsVersion rootProject.ext.appBuildToolsVersion

    defaultConfig {
        applicationId "com.bright.cleanarchitecturenewsfeed"
        minSdkVersion rootProject.ext.appMinSdkVersion
        targetSdkVersion rootProject.ext.appTargetSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation rootProject.ext.suportDependencies.values()
    implementation rootProject.ext.room.values()
    implementation rootProject.ext.koin.values()
    implementation rootProject.ext.coroutineDependencies.values()
    implementation rootProject.ext.liveCycle.values()
    implementation rootProject.ext.retrofit.values()
    implementation rootProject.ext.extra.values()
    kapt rootProject.ext.roomKapt
    kapt rootProject.ext.liveCycleKapt

    //java unit test cases
    testImplementation rootProject.ext.mockito
    testImplementation rootProject.ext.junit
    //android instrumentation test classes
    androidTestImplementation rootProject.ext.expreso.values()
    androidTestImplementation rootProject.ext.testRunnner.values()

    //MARK: including other domains
    implementation project(':data')
    implementation project(':domain')
}

